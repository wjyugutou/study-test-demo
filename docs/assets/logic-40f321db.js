import{i as h}from"./index-aaf76d81.js";class f{constructor(e,t,s){this.width=e,this.height=t,this.mines=s,this.state=h(),this.directions=[[1,0],[1,1],[0,1],[-1,1],[-1,0],[-1,-1],[0,-1],[1,-1]],this.reset()}get board(){return this.state.value.board}get blocks(){return this.state.value.board.flat()}reset(e=this.width,t=this.height,s=this.mines){this.width=e,this.height=t,this.mines=s,this.state.value={board:Array.from({length:this.height},(r,i)=>Array.from({length:this.width},(a,n)=>({x:n,y:i,adjacentMines:0,revealed:!1}))),gameState:"play",mineGenerate:!1,startTime:+Date.now()}}random(e,t){return Math.random()*(t-e)+e}randomInt(e,t){return Math.round(this.random(e,t))}generateMines(e,t){const s=()=>{const r=this.randomInt(0,this.width-1),i=this.randomInt(0,this.height-1),a=e[i][r];return Math.abs(t.x-a.x)<=1&&Math.abs(t.y-a.y)<=1||a.mine?!1:(a.mine=!0,!0)};Array.from({length:this.mines}).forEach(()=>{for(;!s(););}),this.updateNumbers(e)}updateNumbers(e){e.forEach(t=>{t.forEach(s=>{s.mine||this.getSiblings(s).forEach(r=>{r.mine&&s.adjacentMines++})})})}getSiblings(e){return this.directions.map(([t,s])=>{const r=e.x+t,i=e.y+s;if(!(r<0||r>=this.width||i<0||i>=this.height))return this.board[i][r]}).filter(t=>t)}expendZero(e){e.adjacentMines||this.getSiblings(e).forEach(t=>{t.revealed||(t.revealed=!0,this.expendZero(t))})}onRightClick(e){e.revealed||(e.flagged=!e.flagged)}onClick(e){if(this.state.value.mineGenerate||(this.generateMines(this.board,e),this.state.value.mineGenerate=!0),e.flagged&&(e.flagged=!1),e.revealed=!0,e.mine){this.onGameOver("lost"),this.showAllMines();return}this.expendZero(e)}onDoubleClick(e){this.autoExpand(e)}showAllMines(){this.board.forEach(e=>{e.forEach(t=>{t.mine&&(t.revealed=!0)})})}autoExpand(e){const t=this.getSiblings(e).reduce((i,a)=>a.flagged?i+=1:i,0);t===e.adjacentMines&&this.getSiblings(e).forEach(i=>{i.flagged||(i.revealed=!0,i.mine&&this.onGameOver("lost"))});const s=e.adjacentMines-t;this.getSiblings(e).reduce((i,a)=>!a.revealed&&!a.flagged?i+=1:i,0)===s&&this.getSiblings(e).forEach(i=>{i.revealed||(i.flagged=!0)})}onGameOver(e){this.state.value.gameState=e,this.state.value.endTime=+Date.now(),e==="lost"&&(this.showAllMines(),setTimeout(()=>{alert("lost")},100))}checkGameState(){if(!this.state.value.mineGenerate||this.state.value.gameState!=="play")return;const e=this.state.value.board.flat();e.every(t=>t.revealed||t.flagged||t.mine)&&(e.some(t=>t.flagged&&!t.mine)?this.onGameOver("lost"):this.onGameOver("won"))}}export{f as default};
